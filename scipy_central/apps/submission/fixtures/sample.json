[
  {
    "pk": 1,
    "model": "filestorage.fileset",
    "fields": {
      "created": "2011-07-17 16:36:49",
      "repo_path": "2011/07/000005/"
    }
  },
  {
    "pk": 1,
    "model": "submission.submission",
    "fields": {
      "frozen": false,
      "fileset": null,
      "created_by": 3,
      "date_created": "2011-07-01 17:00:26",
      "sub_type": "link"
    }
  },
  {
    "pk": 2,
    "model": "submission.submission",
    "fields": {
      "frozen": false,
      "fileset": null,
      "created_by": 3,
      "date_created": "2011-07-01 17:03:45",
      "sub_type": "link"
    }
  },
  {
    "pk": 3,
    "model": "submission.submission",
    "fields": {
      "frozen": false,
      "fileset": null,
      "created_by": 3,
      "date_created": "2011-07-01 17:15:54",
      "sub_type": "link"
    }
  },
  {
    "pk": 4,
    "model": "submission.submission",
    "fields": {
      "frozen": false,
      "fileset": null,
      "created_by": 3,
      "date_created": "2011-07-03 12:15:54",
      "sub_type": "link"
    }
  },
  {
    "pk": 5,
    "model": "submission.submission",
    "fields": {
      "frozen": false,
      "date_created": "2011-07-17 16:36:49",
      "sub_type": "snippet",
      "created_by": 3,
      "fileset": 1
    }
  },
  {
    "pk": 1,
    "model": "submission.revision",
    "fields": {
      "sub_license": null,
      "validation_hash": null,
      "is_displayed": true,
      "item_url": "http://code.google.com/p/visvis/",
      "description": "Visvis is a pure Python library for visualization of 1D to 4D data in an object oriented way combining the power of OpenGL with the usability of Python. \r\n\r\nA MATLAB-like interface in the form of a set of functions allows easy creation of objects, e.g. ``plot()``, ``imshow()``, ``volshow()``, and ``surf()``.",
      "description_html": "<p>Visvis is a pure Python library for visualization of 1D to 4D data in an object oriented way combining the power of OpenGL with the usability of Python.</p>\n<p>A MATLAB-like interface in the form of a set of functions allows easy creation of objects, e.g. <tt class=\"docutils literal\"><span class=\"pre\">plot()</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">imshow()</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">volshow()</span></tt>, and <tt class=\"docutils literal\"><span class=\"pre\">surf()</span></tt>.</p>\n",
      "title": "Visvis: an object oriented approach to visualization",
      "created_by": 3,
      "item_code": null,
      "date_created": "2011-07-01 17:00:26",
      "item_highlighted_code": null,
      "entry": 1,
      "slug": "visvis-an-object-oriented-approach-to-visualization",
      "hash_id": "d41d8cd98f00b204e9800998ecf8427e"
    }
  },
  {
    "pk": 2,
    "model": "submission.revision",
    "fields": {
      "sub_license": null,
      "validation_hash": null,
      "is_displayed": true,
      "item_url": "http://code.google.com/p/visvis/",
      "description": "Visvis is a pure Python library for visualization of 1D to 4D data in an object oriented way combining the power of OpenGL with the usability of Python. \r\n\r\nA MATLAB-like interface in the form of a set of functions allows easy creation of objects, e.g. ``plot()``, ``imshow()``, ``volshow()``, and ``surf()``.",
      "description_html": "<p>Visvis is a pure Python library for visualization of 1D to 4D data in an object oriented way combining the power of OpenGL with the usability of Python.</p>\n<p>A MATLAB-like interface in the form of a set of functions allows easy creation of objects, e.g. <tt class=\"docutils literal\"><span class=\"pre\">plot()</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">imshow()</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">volshow()</span></tt>, and <tt class=\"docutils literal\"><span class=\"pre\">surf()</span></tt>.</p>\n",
      "title": "Visvis: an object oriented approach to visualization",
      "created_by": 3,
      "item_code": null,
      "date_created": "2011-07-01 17:01:37",
      "item_highlighted_code": null,
      "entry": 1,
      "slug": "visvis-an-object-oriented-approach-to-visualization",
      "hash_id": "d41d8cd98f00b204e9800998ecf8427e"
    }
  },
  {
    "pk": 3,
    "model": "submission.revision",
    "fields": {
      "sub_license": null,
      "validation_hash": null,
      "is_displayed": true,
      "item_url": "http://code.google.com/p/playdoh/",
      "description": "Playdoh is a pure Python library for distributing computations across the free computing units (CPUs and GPUs) available in a small network of multicore computers. \r\n\r\nPlaydoh supports independent (embarassingly) parallel problems as well as loosely coupled tasks such as global optimizations, Monte Carlo simulations and numerical integration of partial differential equations. \r\n\r\nIt is designed to be lightweight and easy to use and should be of interest to scientists wanting to turn their lab computers into a small cluster at no cost.",
      "description_html": "<p>Playdoh is a pure Python library for distributing computations across the free computing units (CPUs and GPUs) available in a small network of multicore computers.</p>\n<p>Playdoh supports independent (embarassingly) parallel problems as well as loosely coupled tasks such as global optimizations, Monte Carlo simulations and numerical integration of partial differential equations.</p>\n<p>It is designed to be lightweight and easy to use and should be of interest to scientists wanting to turn their lab computers into a small cluster at no cost.</p>\n",
      "title": "Playdoh: Parallel Distributed Optimization library for Python",
      "created_by": 3,
      "item_code": null,
      "date_created": "2011-07-01 17:03:45",
      "item_highlighted_code": null,
      "entry": 2,
      "slug": "playdoh-parallel-distributed-optimization-library-for-python",
      "hash_id": "d41d8cd98f00b204e9800998ecf8427e"
    }
  },
  {
    "pk": 4,
    "model": "submission.revision",
    "fields": {
      "sub_license": null,
      "validation_hash": null,
      "is_displayed": true,
      "item_url": "http://matplotlib.sourceforge.net/",
      "description": "``matplotlib`` is a 2D plotting library which produces publication quality figures in a variety of hardcopy formats and interactive environments across platforms.\r\n\r\n``matplotlib`` can be used in scripts, the Python and the `IPython shell <http://ipython.org/>`_, web application servers, and six graphical user interface toolkits.",
      "description_html": "<p><tt class=\"docutils literal\"><span class=\"pre\">matplotlib</span></tt> is a 2D plotting library which produces publication quality figures in a variety of hardcopy formats and interactive environments across platforms.</p>\n<p><tt class=\"docutils literal\"><span class=\"pre\">matplotlib</span></tt> can be used in scripts, the Python and the <a class=\"reference external\" href=\"http://ipython.org/\">IPython shell</a>, web application servers, and six graphical user interface toolkits.</p>\n",
      "title": "matplotlib: a plotting library",
      "created_by": 3,
      "item_code": null,
      "date_created": "2011-07-01 17:15:54",
      "item_highlighted_code": null,
      "entry": 3,
      "slug": "matplotlib-a-plotting-library",
      "hash_id": "d41d8cd98f00b204e9800998ecf8427e"
    }
  },
  {
    "pk": 5,
    "model": "submission.revision",
    "fields": {
      "sub_license": null,
      "validation_hash": null,
      "is_displayed": true,
      "item_url": "http://ipython.org/",
      "description": "The goal of IPython is to create a comprehensive environment for interactive and exploratory computing. To support, this goal, IPython has two main components:\r\n\r\n*   an enhanced interactive Python shell\r\n*   an architecture for interactive parallel computing\r\n\r\nAll of IPython is open source (revised BSD license), and it is used by a range of other projects. \r\nIPython officially supports Python 2.5 to 2.7.",
      "description_html": "<p>The goal of IPython is to create a comprehensive environment for interactive and exploratory computing. To support, this goal, IPython has two main components:</p>\n<ul class=\"simple\">\n<li>an enhanced interactive Python shell</li>\n<li>an architecture for interactive parallel computing</li>\n</ul>\n<p>All of IPython is open source (revised BSD license), and it is used by a range of other projects.\nIPython officially supports Python 2.5 to 2.7.</p>\n",
      "title": "IPython: an Interactive computing environment",
      "created_by": 3,
      "item_code": null,
      "date_created": "2011-07-03 12:05:41",
      "item_highlighted_code": null,
      "entry": 4,
      "slug": "ipython-an-interactive-computing-environment",
      "hash_id": "d41d8cd98f00b204e9800998ecf8427e"
    }
  },
  {
    "pk": 6,
    "model": "submission.revision",
    "fields": {
      "sub_license": 1,
      "item_url": null,
      "description": "The code considers the case of finding the intersection of a polynomial, :math:`y=x^2` and a line, :math:`y=x+1`.\r\n\r\nWrite these functions in the form :math:`\\mathbf{f(x) = 0}`, in other words:\r\n\r\n.. math::\r\n\r\n    f_1(x, y) &= y - x^2 = 0\\\\\r\n    f_2(x, y) &= y - x - 1 = 0 \r\n\r\nNow write your Python function, as shown in the code, so that it accepts a vector of these inputs, :math:`x` and :math:`y`, and return another vector of outputs which contains :math:`\\mathbf{f(x)}`.\r\n\r\nEntry inspired by http://scipy.org/Cookbook/Intersection\r\n\r\nRead the `documentation for fsolve <http://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.fsolve.html>`_.",
      "description_html": "<p>The code considers the case of finding the intersection of a polynomial, <span class=\"math\">\\(y=x^2\\)</span> and a line, <span class=\"math\">\\(y=x+1\\)</span>.</p>\n<p>Write these functions in the form <span class=\"math\">\\(\\mathbf{f(x) = 0}\\)</span>, in other words:</p>\n<div class=\"math\">\n\\[\\begin{split}f_1(x, y) &amp;= y - x^2 = 0\\\\\nf_2(x, y) &amp;= y - x - 1 = 0\\end{split}\\]</div>\n<p>Now write your Python function, as shown in the code, so that it accepts a vector of these inputs, <span class=\"math\">\\(x\\)</span> and <span class=\"math\">\\(y\\)</span>, and return another vector of outputs which contains <span class=\"math\">\\(\\mathbf{f(x)}\\)</span>.</p>\n<p>Entry inspired by <a class=\"reference external\" href=\"http://scipy.org/Cookbook/Intersection\">http://scipy.org/Cookbook/Intersection</a></p>\n<p>Read the <a class=\"reference external\" href=\"http://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.fsolve.html\">documentation for fsolve</a>.</p>\n",
      "title": "Find the points at which two given functions intersect",
      "created_by": 3,
      "is_displayed": true,
      "validation_hash": null,
      "item_code": "from scipy.optimize import fsolve\r\nimport numpy as np\r\n\r\ndef f(input_vector):\r\n   x, y = input_vector\r\n   return  np.array([y - x**2, y - x - 1.0])\r\n\r\n\r\n# Solve the function, using (x=1, y=2) as the initial guess\r\nfsolve(f, [1.0, 2.0])",
      "date_created": "2011-07-17 16:36:49",
      "item_highlighted_code": "<table class=\"highlighttable\"><tr><td class=\"linenos\"><div class=\"linenodiv\"><pre> 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10</pre></div></td><td class=\"code\"><div class=\"highlight\"><pre><span class=\"kn\">from</span> <span class=\"nn\">scipy.optimize</span> <span class=\"kn\">import</span> <span class=\"n\">fsolve</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"kn\">as</span> <span class=\"nn\">np</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">f</span><span class=\"p\">(</span><span class=\"n\">input_vector</span><span class=\"p\">):</span>\n   <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">input_vector</span>\n   <span class=\"k\">return</span>  <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"n\">y</span> <span class=\"o\">-</span> <span class=\"n\">x</span><span class=\"o\">**</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"o\">-</span> <span class=\"n\">x</span> <span class=\"o\">-</span> <span class=\"mf\">1.0</span><span class=\"p\">])</span>\n\n\n<span class=\"c\"># Solve the function, using (x=1, y=2) as the initial guess</span>\n<span class=\"n\">fsolve</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mf\">2.0</span><span class=\"p\">])</span>\n</pre></div>\n</td></tr></table>",
      "entry": 5,
      "slug": "find-the-points-at-which-two-given-functions-intersect",
      "hash_id": "b0d2f5f786edf3da05d2e4148ca6b7e9"
    }
  },
  {
    "pk": 1,
    "model": "submission.tagcreation",
    "fields": {
      "date_created": "2011-07-01 17:00:26",
      "tag": 125,
      "created_by": 3,
      "revision": 1
    }
  },
  {
    "pk": 2,
    "model": "submission.tagcreation",
    "fields": {
      "date_created": "2011-07-01 17:00:26",
      "tag": 29,
      "created_by": 3,
      "revision": 1
    }
  },
  {
    "pk": 3,
    "model": "submission.tagcreation",
    "fields": {
      "date_created": "2011-07-01 17:00:26",
      "tag": 21,
      "created_by": 3,
      "revision": 1
    }
  },
  {
    "pk": 4,
    "model": "submission.tagcreation",
    "fields": {
      "date_created": "2011-07-01 17:01:37",
      "tag": 126,
      "created_by": 3,
      "revision": 2
    }
  },
  {
    "pk": 5,
    "model": "submission.tagcreation",
    "fields": {
      "date_created": "2011-07-01 17:01:37",
      "tag": 125,
      "created_by": 3,
      "revision": 2
    }
  },
  {
    "pk": 6,
    "model": "submission.tagcreation",
    "fields": {
      "date_created": "2011-07-01 17:01:37",
      "tag": 29,
      "created_by": 3,
      "revision": 2
    }
  },
  {
    "pk": 7,
    "model": "submission.tagcreation",
    "fields": {
      "date_created": "2011-07-01 17:01:37",
      "tag": 21,
      "created_by": 3,
      "revision": 2
    }
  },
  {
    "pk": 8,
    "model": "submission.tagcreation",
    "fields": {
      "date_created": "2011-07-01 17:03:45",
      "tag": 55,
      "created_by": 3,
      "revision": 3
    }
  },
  {
    "pk": 9,
    "model": "submission.tagcreation",
    "fields": {
      "date_created": "2011-07-01 17:03:45",
      "tag": 127,
      "created_by": 3,
      "revision": 3
    }
  },
  {
    "pk": 10,
    "model": "submission.tagcreation",
    "fields": {
      "date_created": "2011-07-01 17:03:45",
      "tag": 26,
      "created_by": 3,
      "revision": 3
    }
  },
  {
    "pk": 11,
    "model": "submission.tagcreation",
    "fields": {
      "date_created": "2011-07-01 17:03:45",
      "tag": 57,
      "created_by": 3,
      "revision": 3
    }
  },
  {
    "pk": 12,
    "model": "submission.tagcreation",
    "fields": {
      "date_created": "2011-07-01 17:15:54",
      "tag": 75,
      "created_by": 3,
      "revision": 4
    }
  },
  {
    "pk": 13,
    "model": "submission.tagcreation",
    "fields": {
      "date_created": "2011-07-01 17:15:54",
      "tag": 21,
      "created_by": 3,
      "revision": 4
    }
  },
  {
    "pk": 14,
    "model": "submission.tagcreation",
    "fields": {
      "date_created": "2011-07-03 12:15:54",
      "tag": 85,
      "created_by": 3,
      "revision": 5
    }
  },
  {
    "pk": 15,
    "model": "submission.tagcreation",
    "fields": {
      "date_created": "2011-07-03 12:15:54",
      "tag": 70,
      "created_by": 3,
      "revision": 5
    }
  },
  {
    "pk": 16,
    "model": "submission.tagcreation",
    "fields": {
      "date_created": "2011-07-03 12:15:54",
      "tag": 57,
      "created_by": 3,
      "revision": 5
    }
  },
  {
    "pk": 17,
    "model": "submission.tagcreation",
    "fields": {
      "date_created": "2011-07-17 16:36:50",
      "tag": 128,
      "created_by": 3,
      "revision": 6
    }
  },
  {
    "pk": 18,
    "model": "submission.tagcreation",
    "fields": {
      "date_created": "2011-07-17 16:36:50",
      "tag": 114,
      "created_by": 3,
      "revision": 6
    }
  }
]
